<!DOCTYPE html>
<html>
<head>
<title></title>
<meta name=viewport content="width=device-width, initial-scale=1">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />   
<link type="text/css" href="css/styles.css" rel="stylesheet" />
<link type="text/css" href="css/custom.css" rel="stylesheet" />
<link rel="stylesheet" title="Default" href="css/default.css"> 
<script type="text/javascript" src="js/jquery.js"></script>
<script src="js/highlight.min.js"></script>
<script src="js/delphi.min.js"></script>
<script src="js/javascript.min.js"></script>   
<script type="text/javascript">
hljs.tabReplace='    ';hljs.initHighlightingOnLoad();function showme(id){var divid=document.getElementById(id);if(divid.style.display=='block')divid.style.display='none';else divid.style.display='block';}
$(document).ready(function(){$("button").click(function(){$(this).text($(this).text()=='Show JS code'?'Hide JS code':'Show JS code');showme('widget');});});
</script>   
<style> 
html, body { margin:0; padding:0; background: #ffffff;} 
#idheader {width:100%; height:auto; padding: 0; margin: 0;position: fixed;top: 0;
z-index: 2;} 
#idheader table { background: #2C5D88; min-height: 59px }             
#idheader h1 { color: #FFF }     
#idnav {text-align: right; width: 158px; vertical-align: middle;} 
#idnav a { text-decoration: none }
#idnav span {display: inline-block;width: 24px;height: 24px;margin-left: 4px;
background:url('css/img/hm_webhelp_buttons_grey.png') top left no-repeat;} 
#idnav a span {background-image:url('css/img/hm_webhelp_buttons_white.png');} 
#idnav a span:hover {background-image:url('css/img/hm_webhelp_buttons_orange.png');} 
#idnav span.hmbtnprev { background-position: 0 -32px }
#idnav span.hmbtnnext { background-position: -24px -32px }
#idnav span.hmbtntop  { background-position: -48px -32px }
.language-css {background-color: #cd6a51;content: attr(rel);color: white;position: absolute;
width: 100%;background: #e18728;font-family: 'PT Serif', serif;padding: 5px 0;text-indent: 15px;font-size: 17px;font-weight: 300;line-height: 1.45;font-weight: 700;}
#checkoutbutton {
    background-color: #2C5D88;
  -moz-border-radius: 15px;
  -webkit-border-radius: 15px;
  color: #FFFFFF;
  border: 5px solid #e18728;
  padding: 2px;
  margin: 0px 0px 0px 25px;
}
#checkoutbutton:hover {opacity: 0.6; }
.note {padding: 12px;margin: 6px;border-top: 1px;border-right: 1px;border-bottom: 1px;border-left: 1px;border-style: solid;border-color: #D3D3D3;background-color: #E5EFFB;}
</style>
</head>
<body>
<div id="idheader">
<div id="idheaderbg">
<table style="width:100%;border:none;margin:0px;" cellspacing="0" cellpadding="0"> 
  <tr>
    <td class="topichead" style="text-align:left;">
      <h1 class="p_Heading1" style="page-break-after: avoid;"><span class="f_Heading1">Using Abstract Methods and Classes</span></h1>
    </td>
    <td class="topichead" id="idnav">
      <a href="hm_pas2js387.htm"><span class="hmbtnprev"></span></a>
      <a href="index.htm" title="Parent Chapter"><span class="hmbtntop"></span></a>
      <a href="hm_pas2js389.htm"><span class="hmbtnnext"></span></a>
     </td>  
  </tr>  
</table>
</div>
</div>  

<br/><br/>
<table style="width:100%;border:none;margin:10px;" cellspacing="0" cellpadding="0">
  <tr>
	<td>	
	<div class="note"><img src="information.png" border="0" alt="Information" align="bottom" height="16" width="16">&nbsp; An abstract method is a method which the class does not implement. In C++ terminology, such a method is termed a pure virtual function. A class which contains one or more abstract methods is often called an abstract class although in some cases the term abstract class is reserved for classes that contains only abstract methods. Abstract classes cannot be instantiated. Classes which derive from an abstract class should override and provide implementations for the abstract methods, or should themselves be marked also as abstract. Delphi uses the abstract keyword to mark a method as abstract.</div>
	
	</td>
  </tr>
</table>
	
<pre><span id="code" class="language-css">Pas2JS pascal source code</span><br>
<code class="delphi" style="background-color: #FFFEEB;">
unit Unit6;

{$mode objfpc}

interface

uses
  Classes, SysUtils;

type
 TAbstractBaseClass = class
 public
   procedure Method1; virtual; abstract;
 end;

 { TAbstractIntermediateClass }

 TAbstractIntermediateClass = class(TAbstractBaseClass)
 public
   procedure Method1; override; //abstract;
   procedure Method2; virtual;
 end;

 TConcreteClass = class(TAbstractIntermediateClass)
 public
   procedure Method1; override;
 end;

implementation

{ TAbstractIntermediateClass }

procedure TAbstractIntermediateClass.Method1;
begin
  WriteLn('TAbstractIntermediateClass.Method1');
end;

procedure TAbstractIntermediateClass.Method2;
begin
  WriteLn('TAbstractIntermediateClass.Method2');
end;

{ TConcreteClass }

procedure TConcreteClass.Method1;
begin
 inherited Method1;
 WriteLn('TConcreteClass.Method1');
end;

end.

(* --- main program --- *)

var
 o: TConcreteClass;
begin
  o := TConcreteClass.Create;
  o.Method1;
  o.Method2;
end.

{ --- CONSOLE OUTPUT ----
	TAbstractIntermediateClass.Method1
	TConcreteClass.Method1
	TAbstractIntermediateClass.Method2 
}
</code></pre>
<button type="button" id="checkoutbutton">Show JS code</button>
<div id="widget" style="display:none;">
<pre>
<code class="javascript">
rtl.module("Unit6",["System","Classes","SysUtils"],function () {
  "use strict";
  var $mod = this;
  rtl.createClass($mod,"TAbstractBaseClass",pas.System.TObject,function () {
  });
  rtl.createClass($mod,"TAbstractIntermediateClass",$mod.TAbstractBaseClass,function () {
    this.Method1 = function () {
      pas.System.Writeln("TAbstractIntermediateClass.Method1");
    };
    this.Method2 = function () {
      pas.System.Writeln("TAbstractIntermediateClass.Method2");
    };
  });
  rtl.createClass($mod,"TConcreteClass",$mod.TAbstractIntermediateClass,function () {
    this.Method1 = function () {
      $mod.TAbstractIntermediateClass.Method1.call(this);
      pas.System.Writeln("TConcreteClass.Method1");
    };
  });
});

rtl.module("program",["System","Classes","SysUtils","Unit6"],function () {
  "use strict";
  var $mod = this;
  this.o = null;
  $mod.$main = function () {
    $mod.o = pas.Unit6.TConcreteClass.$create("Create");
    $mod.o.Method1();
    $mod.o.Method2();
  };
});

</code></pre></div>
</div>
</body>
</html>
